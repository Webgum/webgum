/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from "fuels";

import type { Enum, Option } from "./common";

export type AddressInput = { value: string };

export type AddressOutput = { value: string };

export type ContractIdInput = { value: string };

export type ContractIdOutput = { value: string };

export type ProjectInput = {
  project_id: BigNumberish;
  price: BigNumberish;
  max_buyers: BigNumberish;
  buyer_count: BigNumberish;
  owner_address: IdentityInput;
  metadata: string;
};

export type ProjectOutput = {
  project_id: BN;
  price: BN;
  max_buyers: BN;
  buyer_count: BN;
  owner_address: IdentityOutput;
  metadata: string;
};

export type VectorInput = {
  inner: [any, any, any, any, any];
  current_ix: BigNumberish;
};

export type VectorOutput = { inner: [any, any, any, any, any]; current_ix: BN };

export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;

export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;

interface WebgumContractAbiInterface extends Interface {
  functions: {
    buy_project: FunctionFragment;
    get_bought_project: FunctionFragment;
    get_buyer_list_length: FunctionFragment;
    get_buyer_vector: FunctionFragment;
    get_created_project: FunctionFragment;
    get_created_project_id: FunctionFragment;
    get_creator_list_length: FunctionFragment;
    get_creator_vector: FunctionFragment;
    get_project: FunctionFragment;
    get_project_rating: FunctionFragment;
    get_project_ratings_ix: FunctionFragment;
    get_projects_list_length: FunctionFragment;
    has_bought_project: FunctionFragment;
    initialize_owner: FunctionFragment;
    list_project: FunctionFragment;
    review_project: FunctionFragment;
    update_project: FunctionFragment;
    withdraw_funds: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "buy_project",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_bought_project",
    values: [IdentityInput, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_buyer_list_length",
    values: [IdentityInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_buyer_vector",
    values: [IdentityInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_created_project",
    values: [IdentityInput, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_created_project_id",
    values: [IdentityInput, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_creator_list_length",
    values: [IdentityInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_creator_vector",
    values: [IdentityInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_project",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_project_rating",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_project_ratings_ix",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_projects_list_length",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "has_bought_project",
    values: [BigNumberish, IdentityInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "initialize_owner",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "list_project",
    values: [BigNumberish, BigNumberish, string]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "review_project",
    values: [BigNumberish, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "update_project",
    values: [BigNumberish, BigNumberish, BigNumberish, string]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "withdraw_funds",
    values?: undefined
  ): Uint8Array;

  decodeFunctionData(
    functionFragment: "buy_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_bought_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_buyer_list_length",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_buyer_vector",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_created_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_created_project_id",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_creator_list_length",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_creator_vector",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_project_rating",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_project_ratings_ix",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_projects_list_length",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "has_bought_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "initialize_owner",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "list_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "review_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "update_project",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "withdraw_funds",
    data: BytesLike
  ): DecodedValue;
}

export class WebgumContractAbi extends Contract {
  interface: WebgumContractAbiInterface;
  functions: {
    buy_project: InvokeFunction<[project_id: BigNumberish], void>;

    get_bought_project: InvokeFunction<
      [buyer: IdentityInput, index: BigNumberish],
      ProjectOutput
    >;

    get_buyer_list_length: InvokeFunction<[buyer: IdentityInput], BN>;

    get_buyer_vector: InvokeFunction<[id: IdentityInput], VectorOutput>;

    get_created_project: InvokeFunction<
      [creator: IdentityInput, index: BigNumberish],
      ProjectOutput
    >;

    get_created_project_id: InvokeFunction<
      [creator: IdentityInput, index: BigNumberish],
      BN
    >;

    get_creator_list_length: InvokeFunction<[creator: IdentityInput], BN>;

    get_creator_vector: InvokeFunction<[id: IdentityInput], VectorOutput>;

    get_project: InvokeFunction<[project_id: BigNumberish], ProjectOutput>;

    get_project_rating: InvokeFunction<
      [index: BigNumberish],
      [IdentityOutput, BN]
    >;

    get_project_ratings_ix: InvokeFunction<
      [project_id: BigNumberish],
      VectorOutput
    >;

    get_projects_list_length: InvokeFunction<[], BN>;

    has_bought_project: InvokeFunction<
      [project_id: BigNumberish, wallet: IdentityInput],
      boolean
    >;

    initialize_owner: InvokeFunction<[], IdentityOutput>;

    list_project: InvokeFunction<
      [price: BigNumberish, max_buyers: BigNumberish, metadata: string],
      ProjectOutput
    >;

    review_project: InvokeFunction<
      [project_id: BigNumberish, rating: BigNumberish],
      BN
    >;

    update_project: InvokeFunction<
      [
        project_id: BigNumberish,
        price: BigNumberish,
        max_buyers: BigNumberish,
        metadata: string
      ],
      ProjectOutput
    >;

    withdraw_funds: InvokeFunction<[], void>;
  };
}
